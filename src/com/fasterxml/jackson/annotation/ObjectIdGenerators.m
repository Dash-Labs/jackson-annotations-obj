//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/blangel/projects/3rd-party/jackson-annotations/target/src/com/fasterxml/jackson/annotation/ObjectIdGenerators.java
//

#include "IOSClass.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerators.h"
#include "java/lang/Integer.h"
#include "java/util/UUID.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators

- (instancetype)init {
  return [super init];
}

@end

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators_None

- (instancetype)init {
  return [super init];
}

@end

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators_Base

- (instancetype)initWithIOSClass:(IOSClass *)scope {
  if (self = [super init]) {
    ComFasterxmlJacksonAnnotationObjectIdGenerators_Base_set__scope_(self, scope);
  }
  return self;
}

- (IOSClass *)getScope {
  return _scope_;
}

- (jboolean)canUseForWithComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)gen {
  return ([((ComFasterxmlJacksonAnnotationObjectIdGenerator *) nil_chk(gen)) getClass] == [self getClass]) && ([gen getScope] == _scope_);
}

- (void)dealloc {
  ComFasterxmlJacksonAnnotationObjectIdGenerators_Base_set__scope_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ComFasterxmlJacksonAnnotationObjectIdGenerators_Base *)other {
  [super copyAllFieldsTo:other];
  ComFasterxmlJacksonAnnotationObjectIdGenerators_Base_set__scope_(other, _scope_);
}

@end

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators_PropertyGenerator

- (instancetype)initWithIOSClass:(IOSClass *)scope {
  return [super initWithIOSClass:scope];
}

@end

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGenerator

- (instancetype)init {
  return [self initComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGeneratorWithIOSClass:[IOSClass classWithClass:[NSObject class]] withInt:-1];
}

- (instancetype)initComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGeneratorWithIOSClass:(IOSClass *)scope
                                                                                             withInt:(jint)fv {
  if (self = [super initWithIOSClass:scope]) {
    _nextValue_ = fv;
  }
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)scope
                         withInt:(jint)fv {
  return [self initComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGeneratorWithIOSClass:scope withInt:fv];
}

- (jint)initialValue {
  return 1;
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator *)forScopeWithIOSClass:(IOSClass *)scope {
  return (_scope_ == scope) ? self : [[[ComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGenerator alloc] initWithIOSClass:scope withInt:_nextValue_] autorelease];
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator *)newForSerializationWithId:(id)context {
  return [[[ComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGenerator alloc] initWithIOSClass:_scope_ withInt:[self initialValue]] autorelease];
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)keyWithId:(id)key {
  return [[[ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey alloc] initWithIOSClass:[self getClass] withIOSClass:_scope_ withId:key] autorelease];
}

- (JavaLangInteger *)generateIdWithId:(id)forPojo {
  jint id_ = _nextValue_;
  ++_nextValue_;
  return JavaLangInteger_valueOfWithInt_(id_);
}

- (void)copyAllFieldsTo:(ComFasterxmlJacksonAnnotationObjectIdGenerators_IntSequenceGenerator *)other {
  [super copyAllFieldsTo:other];
  other->_nextValue_ = _nextValue_;
}

@end

@implementation ComFasterxmlJacksonAnnotationObjectIdGenerators_UUIDGenerator

- (instancetype)init {
  return [self initComFasterxmlJacksonAnnotationObjectIdGenerators_UUIDGeneratorWithIOSClass:[IOSClass classWithClass:[NSObject class]]];
}

- (instancetype)initComFasterxmlJacksonAnnotationObjectIdGenerators_UUIDGeneratorWithIOSClass:(IOSClass *)scope {
  return [super initWithIOSClass:[IOSClass classWithClass:[NSObject class]]];
}

- (instancetype)initWithIOSClass:(IOSClass *)scope {
  return [self initComFasterxmlJacksonAnnotationObjectIdGenerators_UUIDGeneratorWithIOSClass:scope];
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator *)forScopeWithIOSClass:(IOSClass *)scope {
  return self;
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator *)newForSerializationWithId:(id)context {
  return self;
}

- (JavaUtilUUID *)generateIdWithId:(id)forPojo {
  return JavaUtilUUID_randomUUID();
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)keyWithId:(id)key {
  return [[[ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey alloc] initWithIOSClass:[self getClass] withIOSClass:nil withId:key] autorelease];
}

- (jboolean)canUseForWithComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)gen {
  return [((ComFasterxmlJacksonAnnotationObjectIdGenerator *) nil_chk(gen)) getClass] == [self getClass];
}

@end
