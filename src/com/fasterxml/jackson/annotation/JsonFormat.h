//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/ubuntu/projects/jackson-annotations/target/src/com/fasterxml/jackson/annotation/JsonFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonFormat
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonFormat

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonFormat_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonFormat))
#define ComFasterxmlJacksonAnnotationJsonFormat_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class ComFasterxmlJacksonAnnotationJsonFormat_Shape;
@class IOSClass;

@protocol ComFasterxmlJacksonAnnotationJsonFormat < JavaLangAnnotationAnnotation >

@property (readonly) NSString *pattern;
@property (readonly) ComFasterxmlJacksonAnnotationJsonFormat_Shape *shape;
@property (readonly) NSString *locale;
@property (readonly) NSString *timezone;

@end

@interface ComFasterxmlJacksonAnnotationJsonFormat : NSObject < ComFasterxmlJacksonAnnotationJsonFormat > {
 @public
  NSString *pattern_;
  ComFasterxmlJacksonAnnotationJsonFormat_Shape *shape_;
  NSString *locale_;
  NSString *timezone_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonFormat)

inline NSString *ComFasterxmlJacksonAnnotationJsonFormat_get_DEFAULT_LOCALE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonAnnotationJsonFormat_DEFAULT_LOCALE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonFormat, DEFAULT_LOCALE, NSString *)

inline NSString *ComFasterxmlJacksonAnnotationJsonFormat_get_DEFAULT_TIMEZONE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonAnnotationJsonFormat_DEFAULT_TIMEZONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonFormat, DEFAULT_TIMEZONE, NSString *)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonFormat> create_ComFasterxmlJacksonAnnotationJsonFormat(NSString *locale, NSString *pattern, ComFasterxmlJacksonAnnotationJsonFormat_Shape *shape, NSString *timezone);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonFormat)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonFormat_Shape_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonFormat_Shape))
#define ComFasterxmlJacksonAnnotationJsonFormat_Shape_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum) {
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_ANY = 0,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_SCALAR = 1,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_ARRAY = 2,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_OBJECT = 3,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_NUMBER = 4,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_NUMBER_FLOAT = 5,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_NUMBER_INT = 6,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_STRING = 7,
  ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_BOOLEAN = 8,
};

@interface ComFasterxmlJacksonAnnotationJsonFormat_Shape : JavaLangEnum < NSCopying >

#pragma mark Public

- (jboolean)isNumeric;

- (jboolean)isStructured;

+ (ComFasterxmlJacksonAnnotationJsonFormat_Shape *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonFormat_Shape)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_values_[];

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_ANY();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, ANY)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_SCALAR();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, SCALAR)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_ARRAY();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, ARRAY)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_OBJECT();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, OBJECT)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_NUMBER();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, NUMBER)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_NUMBER_FLOAT();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, NUMBER_FLOAT)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_NUMBER_INT();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, NUMBER_INT)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_STRING();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, STRING)

inline ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_get_BOOLEAN();
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonFormat_Shape, BOOLEAN)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationJsonFormat_Shape_values();

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Shape *ComFasterxmlJacksonAnnotationJsonFormat_Shape_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonFormat_Shape)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonFormat_Value_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonFormat_Value))
#define ComFasterxmlJacksonAnnotationJsonFormat_Value_

@class ComFasterxmlJacksonAnnotationJsonFormat_Shape;
@class JavaUtilLocale;
@class JavaUtilTimeZone;
@protocol ComFasterxmlJacksonAnnotationJsonFormat;

@interface ComFasterxmlJacksonAnnotationJsonFormat_Value : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithComFasterxmlJacksonAnnotationJsonFormat:(id<ComFasterxmlJacksonAnnotationJsonFormat>)ann;

- (instancetype)initWithNSString:(NSString *)p
withComFasterxmlJacksonAnnotationJsonFormat_Shape:(ComFasterxmlJacksonAnnotationJsonFormat_Shape *)sh
              withJavaUtilLocale:(JavaUtilLocale *)l
                    withNSString:(NSString *)tzStr
            withJavaUtilTimeZone:(JavaUtilTimeZone *)tz;

- (instancetype)initWithNSString:(NSString *)p
withComFasterxmlJacksonAnnotationJsonFormat_Shape:(ComFasterxmlJacksonAnnotationJsonFormat_Shape *)sh
              withJavaUtilLocale:(JavaUtilLocale *)l
            withJavaUtilTimeZone:(JavaUtilTimeZone *)tz;

- (instancetype)initWithNSString:(NSString *)p
withComFasterxmlJacksonAnnotationJsonFormat_Shape:(ComFasterxmlJacksonAnnotationJsonFormat_Shape *)sh
                    withNSString:(NSString *)localeStr
                    withNSString:(NSString *)tzStr;

- (JavaUtilLocale *)getLocale;

- (NSString *)getPattern;

- (ComFasterxmlJacksonAnnotationJsonFormat_Shape *)getShape;

- (JavaUtilTimeZone *)getTimeZone;

- (jboolean)hasLocale;

- (jboolean)hasPattern;

- (jboolean)hasShape;

- (jboolean)hasTimeZone;

- (NSString *)timeZoneAsString;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)withLocaleWithJavaUtilLocale:(JavaUtilLocale *)l;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)withPatternWithNSString:(NSString *)p;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)withShapeWithComFasterxmlJacksonAnnotationJsonFormat_Shape:(ComFasterxmlJacksonAnnotationJsonFormat_Shape *)s;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)withTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)tz;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonFormat_Value)

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonFormat_Value_init(ComFasterxmlJacksonAnnotationJsonFormat_Value *self);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *new_ComFasterxmlJacksonAnnotationJsonFormat_Value_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *create_ComFasterxmlJacksonAnnotationJsonFormat_Value_init();

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithComFasterxmlJacksonAnnotationJsonFormat_(ComFasterxmlJacksonAnnotationJsonFormat_Value *self, id<ComFasterxmlJacksonAnnotationJsonFormat> ann);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *new_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithComFasterxmlJacksonAnnotationJsonFormat_(id<ComFasterxmlJacksonAnnotationJsonFormat> ann) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *create_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithComFasterxmlJacksonAnnotationJsonFormat_(id<ComFasterxmlJacksonAnnotationJsonFormat> ann);

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withNSString_withNSString_(ComFasterxmlJacksonAnnotationJsonFormat_Value *self, NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, NSString *localeStr, NSString *tzStr);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *new_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withNSString_withNSString_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, NSString *localeStr, NSString *tzStr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *create_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withNSString_withNSString_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, NSString *localeStr, NSString *tzStr);

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withJavaUtilTimeZone_(ComFasterxmlJacksonAnnotationJsonFormat_Value *self, NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, JavaUtilTimeZone *tz);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *new_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withJavaUtilTimeZone_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, JavaUtilTimeZone *tz) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *create_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withJavaUtilTimeZone_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, JavaUtilTimeZone *tz);

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withNSString_withJavaUtilTimeZone_(ComFasterxmlJacksonAnnotationJsonFormat_Value *self, NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, NSString *tzStr, JavaUtilTimeZone *tz);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *new_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withNSString_withJavaUtilTimeZone_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, NSString *tzStr, JavaUtilTimeZone *tz) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *create_ComFasterxmlJacksonAnnotationJsonFormat_Value_initWithNSString_withComFasterxmlJacksonAnnotationJsonFormat_Shape_withJavaUtilLocale_withNSString_withJavaUtilTimeZone_(NSString *p, ComFasterxmlJacksonAnnotationJsonFormat_Shape *sh, JavaUtilLocale *l, NSString *tzStr, JavaUtilTimeZone *tz);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonFormat_Value)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonFormat")
