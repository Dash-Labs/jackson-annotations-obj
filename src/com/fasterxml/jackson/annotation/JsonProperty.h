//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/blangel/projects/dash/jackson-annotations/target/src/com/fasterxml/jackson/annotation/JsonProperty.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonProperty
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonProperty

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonProperty_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonProperty))
#define ComFasterxmlJacksonAnnotationJsonProperty_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class ComFasterxmlJacksonAnnotationJsonProperty_Access;
@class IOSClass;

@protocol ComFasterxmlJacksonAnnotationJsonProperty < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;
@property (readonly) jboolean required;
@property (readonly) jint index;
@property (readonly) NSString *defaultValue;
@property (readonly) ComFasterxmlJacksonAnnotationJsonProperty_Access *access;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonProperty : NSObject < ComFasterxmlJacksonAnnotationJsonProperty > {
 @public
  NSString *value_;
  jboolean required_;
  jint index_;
  NSString *defaultValue_;
  ComFasterxmlJacksonAnnotationJsonProperty_Access *access_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonProperty)

inline NSString *ComFasterxmlJacksonAnnotationJsonProperty_get_USE_DEFAULT_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonAnnotationJsonProperty_USE_DEFAULT_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonProperty, USE_DEFAULT_NAME, NSString *)

inline jint ComFasterxmlJacksonAnnotationJsonProperty_get_INDEX_UNKNOWN(void);
#define ComFasterxmlJacksonAnnotationJsonProperty_INDEX_UNKNOWN -1
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonAnnotationJsonProperty, INDEX_UNKNOWN, jint)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonProperty> create_ComFasterxmlJacksonAnnotationJsonProperty(ComFasterxmlJacksonAnnotationJsonProperty_Access *access, NSString *defaultValue, jint index, jboolean required, NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonProperty)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonProperty_Access_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonProperty_Access))
#define ComFasterxmlJacksonAnnotationJsonProperty_Access_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationJsonProperty_Access_Enum) {
  ComFasterxmlJacksonAnnotationJsonProperty_Access_Enum_AUTO = 0,
  ComFasterxmlJacksonAnnotationJsonProperty_Access_Enum_READ_ONLY = 1,
  ComFasterxmlJacksonAnnotationJsonProperty_Access_Enum_WRITE_ONLY = 2,
  ComFasterxmlJacksonAnnotationJsonProperty_Access_Enum_READ_WRITE = 3,
};

@interface ComFasterxmlJacksonAnnotationJsonProperty_Access : JavaLangEnum

#pragma mark Public

+ (ComFasterxmlJacksonAnnotationJsonProperty_Access *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonProperty_Access)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_values_[];

inline ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_get_AUTO(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonProperty_Access, AUTO)

inline ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_get_READ_ONLY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonProperty_Access, READ_ONLY)

inline ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_get_WRITE_ONLY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonProperty_Access, WRITE_ONLY)

inline ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_get_READ_WRITE(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonProperty_Access, READ_WRITE)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationJsonProperty_Access_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonProperty_Access *ComFasterxmlJacksonAnnotationJsonProperty_Access_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonProperty_Access)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonProperty")
