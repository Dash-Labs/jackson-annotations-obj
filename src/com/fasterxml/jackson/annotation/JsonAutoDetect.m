//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /home/ubuntu/projects/jackson-annotations/target/src/com/fasterxml/jackson/annotation/JsonAutoDetect.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JacksonAnnotation.h"
#include "com/fasterxml/jackson/annotation/JsonAutoDetect.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"
#include "java/lang/reflect/Member.h"
#include "java/lang/reflect/Modifier.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJsonAutoDetect__Annotations$0(void);

__attribute__((unused)) static void ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *self, NSString *__name, jint __ordinal);

@implementation ComFasterxmlJacksonAnnotationJsonAutoDetect

@synthesize getterVisibility = getterVisibility_;
@synthesize isGetterVisibility = isGetterVisibility_;
@synthesize setterVisibility = setterVisibility_;
@synthesize creatorVisibility = creatorVisibility_;
@synthesize fieldVisibility = fieldVisibility_;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getterVisibilityDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT);
}

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)isGetterVisibilityDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT);
}

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)setterVisibilityDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT);
}

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)creatorVisibilityDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT);
}

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)fieldVisibilityDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT);
}

- (IOSClass *)annotationType {
  return ComFasterxmlJacksonAnnotationJsonAutoDetect_class_();
}

- (NSString *)description {
  return @"@com.fasterxml.jackson.annotation.JsonAutoDetect()";
}

- (void)dealloc {
  RELEASE_(getterVisibility_);
  RELEASE_(isGetterVisibility_);
  RELEASE_(setterVisibility_);
  RELEASE_(creatorVisibility_);
  RELEASE_(fieldVisibility_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getterVisibility);
  methods[1].selector = @selector(isGetterVisibility);
  methods[2].selector = @selector(setterVisibility);
  methods[3].selector = @selector(creatorVisibility);
  methods[4].selector = @selector(fieldVisibility);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "getterVisibility_", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "isGetterVisibility_", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "setterVisibility_", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "creatorVisibility_", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "fieldVisibility_", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", (void *)&ComFasterxmlJacksonAnnotationJsonAutoDetect__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonAutoDetect = { "JsonAutoDetect", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x2609, 5, 5, -1, 0, -1, -1, 1 };
  return &_ComFasterxmlJacksonAnnotationJsonAutoDetect;
}

@end

id<ComFasterxmlJacksonAnnotationJsonAutoDetect> create_ComFasterxmlJacksonAnnotationJsonAutoDetect(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *creatorVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *fieldVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *getterVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *isGetterVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *setterVisibility) {
  ComFasterxmlJacksonAnnotationJsonAutoDetect *self = AUTORELEASE([[ComFasterxmlJacksonAnnotationJsonAutoDetect alloc] init]);
  self->creatorVisibility_ = RETAIN_(creatorVisibility);
  self->fieldVisibility_ = RETAIN_(fieldVisibility);
  self->getterVisibility_ = RETAIN_(getterVisibility);
  self->isGetterVisibility_ = RETAIN_(isGetterVisibility);
  self->setterVisibility_ = RETAIN_(setterVisibility);
  return self;
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonAutoDetect__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, TYPE) } count:2 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_ComFasterxmlJacksonAnnotationJacksonAnnotation() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonAutoDetect)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility)

ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_[6];

@implementation ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility

- (jboolean)isVisibleWithJavaLangReflectMember:(id<JavaLangReflectMember>)m {
  switch ([self ordinal]) {
    case ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_ANY:
    return true;
    case ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_NONE:
    return false;
    case ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_NON_PRIVATE:
    return !JavaLangReflectModifier_isPrivateWithInt_([((id<JavaLangReflectMember>) nil_chk(m)) getModifiers]);
    case ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_PROTECTED_AND_PUBLIC:
    if (JavaLangReflectModifier_isProtectedWithInt_([((id<JavaLangReflectMember>) nil_chk(m)) getModifiers])) {
      return true;
    }
    case ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_PUBLIC_ONLY:
    return JavaLangReflectModifier_isPublicWithInt_([((id<JavaLangReflectMember>) nil_chk(m)) getModifiers]);
    default:
    return false;
  }
}

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values();
}

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isVisibleWithJavaLangReflectMember:);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ANY", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "NON_PRIVATE", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PROTECTED_AND_PUBLIC", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "PUBLIC_ONLY", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NONE", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "DEFAULT", "LComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "isVisible", "LJavaLangReflectMember;", "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, ANY), &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NON_PRIVATE), &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, PROTECTED_AND_PUBLIC), &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, PUBLIC_ONLY), &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE), &JreEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT), "LComFasterxmlJacksonAnnotationJsonAutoDetect;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility = { "Visibility", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x4019, 3, 6, 10, -1, -1, 11, -1 };
  return &_ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 6; i++) {
      (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility)
  }
}

@end

void ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values() {
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_ count:6 type:ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_class_()];
}

ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initialize();
  for (int i = 0; i < 6; i++) {
    ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *e = ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility)
