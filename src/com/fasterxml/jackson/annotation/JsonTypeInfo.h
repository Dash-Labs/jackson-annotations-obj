//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/blangel/projects/dash/jackson-annotations/target/src/com/fasterxml/jackson/annotation/JsonTypeInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonTypeInfo
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonTypeInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonTypeInfo_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonTypeInfo))
#define ComFasterxmlJacksonAnnotationJsonTypeInfo_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonAnnotationJsonTypeInfo_Id;
@class IOSClass;

@protocol ComFasterxmlJacksonAnnotationJsonTypeInfo < JavaLangAnnotationAnnotation >

@property (readonly) ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *use;
@property (readonly) ComFasterxmlJacksonAnnotationJsonTypeInfo_As *include;
@property (readonly) NSString *property;
@property (readonly) IOSClass *defaultImpl;
@property (readonly) jboolean visible;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonTypeInfo : NSObject < ComFasterxmlJacksonAnnotationJsonTypeInfo > {
 @public
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *use_;
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As *include_;
  NSString *property_;
  IOSClass *defaultImpl_;
  jboolean visible_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonTypeInfo)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonTypeInfo> create_ComFasterxmlJacksonAnnotationJsonTypeInfo(IOSClass *defaultImpl, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *include, NSString *property, ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *use, jboolean visible);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonTypeInfo)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonTypeInfo_Id))
#define ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum_NONE = 0,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum_CLASS = 1,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum_MINIMAL_CLASS = 2,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum_NAME = 3,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_Enum_CUSTOM = 4,
};

@interface ComFasterxmlJacksonAnnotationJsonTypeInfo_Id : JavaLangEnum

#pragma mark Public

- (NSString *)getDefaultPropertyName;

+ (ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values_[];

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_get_NONE(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NONE)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_get_CLASS(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CLASS)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_get_MINIMAL_CLASS(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, MINIMAL_CLASS)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_get_NAME(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NAME)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_get_CUSTOM(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CUSTOM)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonTypeInfo_As_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonTypeInfo_As))
#define ComFasterxmlJacksonAnnotationJsonTypeInfo_As_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum_PROPERTY = 0,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum_WRAPPER_OBJECT = 1,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum_WRAPPER_ARRAY = 2,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum_EXTERNAL_PROPERTY = 3,
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_Enum_EXISTING_PROPERTY = 4,
};

@interface ComFasterxmlJacksonAnnotationJsonTypeInfo_As : JavaLangEnum

#pragma mark Public

+ (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_[];

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_get_PROPERTY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, PROPERTY)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_get_WRAPPER_OBJECT(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, WRAPPER_OBJECT)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_get_WRAPPER_ARRAY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, WRAPPER_ARRAY)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_get_EXTERNAL_PROPERTY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXTERNAL_PROPERTY)

inline ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_get_EXISTING_PROPERTY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXISTING_PROPERTY)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonTypeInfo_As)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonTypeInfo_None_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonTypeInfo_None))
#define ComFasterxmlJacksonAnnotationJsonTypeInfo_None_

@interface ComFasterxmlJacksonAnnotationJsonTypeInfo_None : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonTypeInfo_None)

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonTypeInfo_None_init(ComFasterxmlJacksonAnnotationJsonTypeInfo_None *self);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonTypeInfo_None)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeInfo")
