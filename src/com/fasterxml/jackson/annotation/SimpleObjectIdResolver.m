//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/blangel/projects/3rd-party/jackson-annotations/target/src/com/fasterxml/jackson/annotation/SimpleObjectIdResolver.java
//

#include "IOSClass.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/annotation/ObjectIdResolver.h"
#include "com/fasterxml/jackson/annotation/SimpleObjectIdResolver.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@implementation ComFasterxmlJacksonAnnotationSimpleObjectIdResolver

- (instancetype)init {
  return [super init];
}

- (void)bindItemWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:(ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)id_
                                                                  withId:(id)ob {
  if (_items_ == nil) {
    ComFasterxmlJacksonAnnotationSimpleObjectIdResolver_setAndConsume__items_(self, [[JavaUtilHashMap alloc] init]);
  }
  else if ([_items_ containsKeyWithId:id_]) {
    @throw [[[JavaLangIllegalStateException alloc] initWithNSString:JreStrcat("$$$@C", @"Already had POJO for id (", [[nil_chk(((ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *) nil_chk(id_))->key_) getClass] getName], @") [", id_, ']')] autorelease];
  }
  [((id<JavaUtilMap>) nil_chk(_items_)) putWithId:id_ withId:ob];
}

- (id)resolveIdWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:(ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)id_ {
  return (_items_ == nil) ? nil : [_items_ getWithId:id_];
}

- (jboolean)canUseForWithComFasterxmlJacksonAnnotationObjectIdResolver:(id<ComFasterxmlJacksonAnnotationObjectIdResolver>)resolverType {
  return [((id<ComFasterxmlJacksonAnnotationObjectIdResolver>) nil_chk(resolverType)) getClass] == [self getClass];
}

- (id<ComFasterxmlJacksonAnnotationObjectIdResolver>)newForDeserializationWithId:(id)context {
  return [[[ComFasterxmlJacksonAnnotationSimpleObjectIdResolver alloc] init] autorelease];
}

- (void)dealloc {
  ComFasterxmlJacksonAnnotationSimpleObjectIdResolver_set__items_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ComFasterxmlJacksonAnnotationSimpleObjectIdResolver *)other {
  [super copyAllFieldsTo:other];
  ComFasterxmlJacksonAnnotationSimpleObjectIdResolver_set__items_(other, _items_);
}

@end
